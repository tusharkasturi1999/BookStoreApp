{
  "swagger": "2.0",
  "info": {
    "description": "This is a Fundoo Notes App project to demonstrate Swagger Documentation",
    "version": "4.1.6",
    "title": "Fundoo Notes App",
    "contact": {
      "email": "prshprvn@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "schemes": ["http"],
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "User API"
    },
    {
      "name": "Notes",
      "description": "Notes API"
    }
  ],
  "securityDefinitions": {
    "bearerAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "access_token"
    }
  },
  "security": {
    "bearerAuth": []
  },
  "paths": {
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all the users",
        "description": "Get all the users",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Save the user",
        "description": "Save the user",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user object",
            "schema": {
              "properties": {
                "user": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "tags": ["Users"],
        "summary": "Update the user",
        "description": "Update the user",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "user object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "404": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      },
      "get": {
        "tags": ["Users"],
        "summary": "Get the user using id",
        "description": "Get the user using id",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id that needs to be updated",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "404": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete the user",
        "description": "Delete the user",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Logging in the user",
        "description": "Logging in the user",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "userLogin",
            "description": "userLogin object",
            "schema": {
              "properties": {
                "userLogin": {
                  "$ref": "#/definitions/UserLogin"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/notes": {
      "get": {
        "tags": ["Notes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get all the notes",
        "description": "Get all the notes",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/Note"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      },
      "post": {
        "tags": ["Notes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Save the Note",
        "description": "Save the Note",
        "produces": ["application/json"],
        "consumes": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "note",
            "description": "note object",
            "schema": {
              "properties": {
                "note": {
                  "$ref": "#/definitions/Note"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "items": {
                "$ref": "#/definitions/Note"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "/notes/{id}": {
      "put": {
        "tags": ["Notes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Update the Note",
        "description": "Update the Note",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Note id that needs to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Note object",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "note": {
                  "type": "object",
                  "$ref": "#/definitions/Note"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Note"
              }
            }
          },
          "404": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      },
      "get": {
        "tags": ["Notes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Get the Note using id",
        "description": "Get the Note using id",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Note id that needs to be updated",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Note"
              }
            }
          },
          "404": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["Notes"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Delete the Note",
        "description": "Delete the Note",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Note id that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Note"
              }
            }
          },
          "400": {
            "description": "Invalid status value",
            "schema": {
              "$ref": "#/definitions/InvalidResponse"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "String"
          },
          "lastName": {
            "type": "String"
          },
          "email": {
            "type": "String"
          },
          "mobileNumber": {
            "type": "String"
          },
          "password": {
            "type": "String"
          }
        }
      },
      "UserLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "String"
          },
          "password": {
            "type": "String"
          }
        }
      },
      "Note": {
        "type": "object",
        "properties": {
          "title": {
            "type": "String"
          },
          "content": {
            "type": "String"
          }
        }
      },
      "InvalidResponse": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  }
}
